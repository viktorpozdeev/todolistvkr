{"version":3,"sources":["componets/Main.js","firebase/index.js","context/index.js","hooks/index.js","componets/Sidebar.js","images/logo.png","componets/User.js","componets/Modal.js","componets/ProjectForm.js","componets/RenameProject.js","componets/Project.js","componets/AddNewProject.js","componets/Projects.js","constans/index.js","componets/Calendar.js","componets/TodoForm.js","componets/AddNewTodo.js","componets/EditTodo.js","componets/Todo.js","componets/Next7days.js","componets/Todos.js","componets/Header.js","App.js","index.js"],"names":["Main","children","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","TodoContext","createContext","TodoContextProvider","defaultProject","useState","selectedProject","setSelectedProject","undefined","selectedTodo","setSelectedTodo","todos","setTodos","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","data","docs","map","doc","id","useTodos","projectsWithStats","projects","setProjectsWithStats","project","numOfTodos","filter","todo","projectName","name","checked","length","useProjectsWithStats","setProjects","useProjects","filteredTodos","setFilteredTodos","todayDateFormated","moment","format","date","todoDate","todayDate","diffDays","diff","useFilterTodos","Provider","value","Sidebar","useContext","sidebarRef","useRef","document","addEventListener","handleClick","removeEventListener","e","target","current","contains","ref","User","src","logo","alt","href","Modal","showModal","setShowModal","modalRef","onClick","ProjectForm","handleSubmit","heading","setValue","confirmButtonText","onSubmit","onChange","type","placeholder","autoFocus","role","RenameProject","newProjectName","setNewProjectName","preventDefault","projectsRef","todosRef","oldProjectName","where","get","then","querySnapshot","empty","update","forEach","alert","renameProject","Project","edit","size","delete","AddNewProject","setProjectName","add","Projects","showMenu","setEdit","pencilColor","color","calendarItems","Calendar","item","index","TodoForm","text","setText","day","setDay","time","setTime","day1","setDay1","time1","setTime1","todoProject","setTodoProject","priorityProject","setPriorityProject","showButtons","utils","DateFnsUtils","DatePicker","TimePicker","style","AddNewTodo","Date","includes","date1","priority","randomColor","EditTodo","console","log","Todo","hover","setHover","deleteTodo","onMouseEnter","onMouseLeave","checkTodo","fontWeight","data-priority","priorityName","nextDayDate","repeatedTodo","repeatNextDay","handleDelete","lang","Next7days","weekTodos","setWeekTodos","sortedTodosByDay","number","today","parseInt","arrangeDays","slice","concat","conditionDay","Todos","dopinfo","setDopInfo","Header","rating","width","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f4bbfa56.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nfunction Main({children}) {\r\n    return (\r\n      <div className=\"Main\">\r\n         {children}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Main;\r\n  ","\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBZCTcOjRWmF73aw4IZsBXBYyN7n7lMu6A\",\r\n    authDomain: \"todo1-ea547.firebaseapp.com\",\r\n    projectId: \"todo1-ea547\",\r\n    storageBucket: \"todo1-ea547.appspot.com\",\r\n    messagingSenderId: \"645408342751\",\r\n    appId: \"1:645408342751:web:3948669d7c2c5726f25f6a\",\r\n    measurementId: \"G-NH8LNKF13Y\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase","import React, { createContext, useState } from 'react'\r\nimport {useTodos,useProjects, useFilterTodos, useProjectsWithStats } from \"../hooks/index\"\r\n\r\n\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoContextProvider({ children }) {\r\n    const defaultProject = \"Сегодня\"\r\n\r\n    const [selectedProject, setSelectedProject] = useState(defaultProject)\r\n    const [selectedTodo,setSelectedTodo]= useState(undefined)\r\n\r\n    const todos=useTodos()\r\n    const projects =useProjects()\r\n    const projectsWithStats = useProjectsWithStats(projects, todos)\r\n    const filteredTodos=useFilterTodos(todos,selectedProject)\r\n    return (\r\n        <div>\r\n\r\n            <TodoContext.Provider\r\n                value={\r\n                    {   defaultProject,\r\n                        selectedProject,\r\n                        setSelectedProject,\r\n                        todos:filteredTodos,\r\n                        projects : projectsWithStats,\r\n                        selectedTodo,\r\n                        setSelectedTodo\r\n                    }\r\n                }\r\n\r\n            >\r\n\r\n                {children}\r\n\r\n            </TodoContext.Provider>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\nexport   { TodoContextProvider, TodoContext }\r\n\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport firebase from \"../firebase/index\"\r\nimport moment from 'moment';\r\n\r\nexport function useTodos() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .onSnapshot(snapshot => {\r\n                const data = snapshot.docs.map(doc => {\r\n                    return {\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }\r\n                })\r\n                setTodos(data)\r\n            })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return todos\r\n}\r\n\r\nexport function useFilterTodos(todos, selectedProject) {\r\n    const [filteredTodos, setFilteredTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        let data;\r\n        const todayDateFormated = moment().format('MM/DD/YYYY')\r\n        if (selectedProject === \"Сегодня\") {\r\n            data = todos.filter(todo => todo.date === todayDateFormated)\r\n        } else if (selectedProject === \"Неделя\") {\r\n            data = todos.filter(todo => {\r\n                const todoDate = moment(todo.date, \"MM/DD/YYYY\")\r\n                const todayDate = moment(todayDateFormated, \"MM/DD/YYYY\")\r\n                const diffDays = todoDate.diff(todayDate, 'days')\r\n                return diffDays >= 0 && diffDays < 7\r\n            })\r\n        } else if (selectedProject === \"Все задачи\") {\r\n            data = todos\r\n        } else {\r\n            data = todos.filter(todo => todo.projectName === selectedProject)\r\n        }\r\n\r\n\r\n        setFilteredTodos(data)\r\n    }, [todos, selectedProject])\r\n\r\n    return filteredTodos\r\n}\r\n\r\n\r\n\r\nexport function useProjects() {\r\n    const [projects, setProjects] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .onSnapshot(snapshot => {\r\n                const data = snapshot.docs.map(doc => {\r\n\r\n\r\n\r\n                    return {\r\n                        id: doc.id,\r\n                        name: doc.data().name\r\n\r\n                    }\r\n                })\r\n                setProjects(data)\r\n            })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return projects\r\n}\r\n\r\n\r\nexport function useProjectsWithStats (projects, todos){\r\n    const [projectsWithStats, setProjectsWithStats] = useState([])\r\n\r\n    useEffect(() => {\r\n        const data = projects.map((project) => {\r\n            return {\r\n                numOfTodos : todos.filter( todo => todo.projectName === project.name && !todo.checked).length,\r\n                ...project\r\n            }\r\n        })\r\n\r\n        setProjectsWithStats(data)\r\n    }, [projects, todos])\r\n\r\n    return projectsWithStats\r\n}","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Sidebar({ children }){\r\n  // CONTEXT\r\n  const { setSelectedTodo,setSelectedProject } = useContext(TodoContext)\r\n\r\n  // REF\r\n  const sidebarRef = useRef()\r\n\r\n  useEffect(() => {\r\n      document.addEventListener('click', handleClick)\r\n\r\n      return () => document.removeEventListener('click', handleClick)\r\n  })\r\n\r\n  const handleClick = e => {\r\n      if(e.target === sidebarRef.current || sidebarRef.current.contains(e.target)){\r\n          setSelectedTodo(undefined)\r\n       \r\n      }\r\n  }\r\n\r\n  return (\r\n      <div\r\n          className='Sidebar'\r\n          ref={sidebarRef}\r\n      >\r\n          {children}\r\n      </div>\r\n  )\r\n}\r\n  export default Sidebar;\r\n  ","export default __webpack_public_path__ + \"static/media/logo.c855d14c.png\";","import React from 'react';\r\n\r\nimport logo from \"../images/logo.png\"\r\n\r\n\r\n\r\nfunction User() {\r\n  return (\r\n    <div className=\"User\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n        <div className=\"info\">\r\n        <p>Учебный планировщик</p>\r\n        <a href=\"#\">Logout!</a>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useRef } from 'react';\r\n\r\n\r\n\r\n\r\nfunction Modal({ children, showModal,setShowModal }) {\r\n  \r\n    const modalRef = useRef()\r\n\r\n    const closeModal = (e) => {\r\n        if (e.target === modalRef.current)\r\n        {\r\n            setShowModal(false)\r\n        }\r\n}\r\n\r\n    return (\r\n        showModal &&\r\n        <div className=\"Modal\" ref={modalRef} onClick={closeModal}>\r\n            <div className=\"container\">\r\n                {children}\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\n\r\n\r\nfunction ProjectForm({ handleSubmit, heading, value, setValue, setShowModal,confirmButtonText }) {\r\n    return (\r\n        <form onSubmit={handleSubmit} className='ProjectForm'>\r\n            <h3>{heading}</h3>\r\n            <input\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Название предмета\"\r\n                autoFocus\r\n            />\r\n            <button className=\"cancel\" role=\"button\" onClick={() => setShowModal(false)}>\r\n                Отмена\r\n            </button>\r\n            <button className=\"confirm\">\r\n                {confirmButtonText}\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ProjectForm;\r\n","\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport ProjectForm from \"./ProjectForm\"\r\nimport firebase from \"../firebase/index\"\r\nimport { TodoContext } from '../context';\r\n\r\nfunction RenameProject({ project, setShowModal }) {\r\n    const [newProjectName, setNewProjectName] = useState(project.name)\r\n\r\n    const {selectedProject,setSelectedProject} =useContext(TodoContext)\r\n\r\n\r\n    const renameProject = (project, newProjectName) => {\r\n        const projectsRef = firebase.firestore().collection('projects')\r\n        const todosRef = firebase.firestore().collection('todos')\r\n        const { name: oldProjectName } = project\r\n\r\n        projectsRef\r\n            .where(\"name\", \"==\", newProjectName)\r\n            .get()\r\n            .then(querySnapshot => {\r\n                if (!querySnapshot.empty) {\r\n                    alert('Такой предмет уже есть')\r\n                } else {\r\n                    projectsRef\r\n                        .doc(project.id)\r\n                        .update({\r\n                            name: newProjectName\r\n                        })\r\n                        .then(() => {\r\n                            todosRef\r\n                                .where('projectName', '==', oldProjectName)\r\n                                .get()\r\n                                .then(querySnapshot => {\r\n                                    querySnapshot.forEach(doc => {\r\n                                        doc.ref.update({\r\n                                            projectName: newProjectName\r\n                                        })\r\n                                    })\r\n                                })\r\n                                .then(() => {\r\n\r\n                                    if (selectedProject === oldProjectName) {\r\n                                        setSelectedProject(newProjectName)\r\n                                    }\r\n\r\n                                })\r\n                        })\r\n                }\r\n\r\n\r\n            })\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        renameProject(project, newProjectName)\r\n        setShowModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"RenameProject\">\r\n            <ProjectForm\r\n                handleSubmit={handleSubmit}\r\n                heading=\"Изменить предмет\"\r\n                value={newProjectName}\r\n                setValue={setNewProjectName}\r\n                setShowModal={setShowModal}\r\n                confirmButtonText='Изменить'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenameProject;\r\n\r\n\r\n","import React, { useContext, useState } from 'react';\r\nimport { Pencil, XCircle } from 'react-bootstrap-icons';\r\n\r\n\r\nimport Modal from \"./Modal\"\r\nimport RenameProject from './RenameProject';\r\nimport { TodoContext } from '../context/index'\r\nimport firebase from \"../firebase/index\"\r\n\r\nfunction Project({ project, edit }) {\r\n\r\n\r\n    const { defaultProject,selectedProject,setSelectedProject } = useContext(TodoContext)\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n\r\n    const deleteProject = () => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(project.id)\r\n            .delete()\r\n            .then(() => {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('todos')\r\n                    .where('projectName', '==', project.name)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                    querySnapshot.forEach(doc=>{\r\n                        doc.ref.delete()\r\n                    })\r\n                    })\r\n                    .then(()=>{\r\n                        if(selectedProject=== project.name)\r\n                        {\r\n\r\n                            setSelectedProject(defaultProject)\r\n                        }\r\n\r\n                    })\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Project\">\r\n            <div className={`name ${selectedProject=== project.name ? 'active':''}`}\r\n\r\n                onClick={() => setSelectedProject(project.name)\r\n                \r\n                }\r\n\r\n            >\r\n                {project.name}\r\n            </div>\r\n            <div className=\"btns\">\r\n                {\r\n                    edit ?\r\n                        <div className=\"edit-delete\">\r\n                            <span className=\"edit\"\r\n                                onClick={() => setShowModal(true)}\r\n                            >\r\n                                <Pencil size=\"13\" />\r\n                            </span>\r\n                            <span className=\"delete\" onClick={() => deleteProject(project)}>\r\n                                <XCircle size=\"13\" />\r\n\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        project.numOfTodos === 0 ?\r\n                            \"\" :\r\n                            <div className=\"total-todos\">\r\n                                {project.numOfTodos}\r\n                            </div>\r\n                }\r\n            </div>\r\n\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <RenameProject project={project} setShowModal={setShowModal} />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Project;\r\n","import React, { useState } from 'react';\r\nimport { Plus } from 'react-bootstrap-icons';\r\n\r\nimport Modal from \"./Modal\"\r\nimport ProjectForm from './ProjectForm';\r\nimport firebase from \"../firebase\"\r\n\r\n\r\nfunction AddNewProject() {\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [projectName, setProjectName] = useState(\"\")\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (projectName) {\r\n            const projectsRef = firebase.firestore().collection(\"projects\")\r\n            projectsRef.where('name', '==', projectName)\r\n                .get()\r\n                .then(querySnapshot => {\r\n\r\n                    if (querySnapshot.empty) {\r\n                        projectsRef\r\n                            .add(\r\n                                {\r\n\r\n                                    name: projectName\r\n                                }\r\n                            )\r\n                    } else {\r\n                        alert(\"Такой предмет уже есть\")\r\n                    }\r\n                })\r\n            setShowModal(false)\r\n            setProjectName('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddNewProject\">\r\n            <div className=\"add-button\">\r\n                <span onClick={() => setShowModal(true)}>\r\n                    <Plus size=\"20\" />\r\n                </span>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <ProjectForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading=\"Новый предмет\"\r\n                    value={projectName}\r\n                    setValue={setProjectName}\r\n                    setShowModal={setShowModal}\r\n                    confirmButtonText='+ Добавить предмет'\r\n                />\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewProject;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport { CaretUp, Palette, PencilFill } from 'react-bootstrap-icons';\r\n\r\nimport Project from \"./Project\"\r\nimport AddNewProject from \"./AddNewProject\"\r\nimport { TodoContext } from '../context';\r\n\r\n\r\n\r\nfunction Projects() {\r\n\r\n  const [showMenu, setShowMenu] = useState(true)\r\n  const [edit, setEdit] = useState(false)\r\n\r\n  const pencilColor = edit ? \"#1EC94C\" : \"#00000\"\r\n//context\r\nconst {projects} =useContext(TodoContext)\r\n\r\n  return (\r\n    <div className=\"Projects\">\r\n      <div className=\"header\">\r\n        <div className=\"title\">\r\n          <Palette size=\"18\" />\r\n          <p>Предметы</p>\r\n        </div>\r\n        <div className=\"btns\">\r\n          {\r\n\r\n            showMenu && projects.length > 0 &&\r\n\r\n            <span className=\"edit\" onClick={() => setEdit(edit => !edit)}>\r\n              <PencilFill size=\"15\" color={pencilColor} />\r\n            </span>\r\n\r\n          }\r\n          <AddNewProject />\r\n          <span className=\"arrow \">\r\n            <CaretUp size=\"20\" />\r\n          </span>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"items\">\r\n            \r\n        {projects.map(project =>\r\n            <Project\r\n            project={project}\r\n            key={project.id}\r\n            edit={edit}\r\n            />\r\n          \r\n        )\r\n        \r\n        }\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"," export const calendarItems = ['Сегодня', 'Неделя', 'Все задачи']","import React, { useContext,useState } from 'react';\r\n\r\nimport { CalendarDate, CaretUp } from 'react-bootstrap-icons';\r\nimport {calendarItems} from \"../constans/index.js\"\r\nimport {TodoContext} from \"../context/index\"\r\n\r\n\r\nfunction Calendar() {\r\nconst {selectedProject,setSelectedProject}= useContext(TodoContext)\r\nconst [selectedCalendar,setSelectedCalendar] = useState('');\r\n\r\n  return (\r\n    <div className=\"Calendar\">\r\n      <div className=\"header\">\r\n        <div className=\"title\">\r\n          <CalendarDate size='18' />\r\n          <p>Календарь</p>\r\n        </div>\r\n        <div className='btns'>\r\n          <span>\r\n            <CaretUp size=\"20\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"items\">\r\n        {calendarItems.map(item =>\r\n\r\n          <div className={`item ${selectedProject===item ? 'active':''}`} key={item.index}\r\n          onClick={()=>setSelectedProject(item)}\r\n          >\r\n              {item}\r\n\r\n          </div>\r\n\r\n        )\r\n\r\n        }\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\n\r\nimport { Bell, CalendarDay, Clock, Palette, X, CardList } from 'react-bootstrap-icons';\r\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\n\r\n\r\nfunction TodoForm({\r\n    handleSubmit,\r\n    heading = false,\r\n    text, setText,\r\n    day, setDay,\r\n    time, setTime,\r\n    day1, setDay1,\r\n    time1, setTime1,\r\n    todoProject, setTodoProject,\r\n    priorityProject, setPriorityProject,\r\n    projects,\r\n    showButtons = false,\r\n    setShowModal = false\r\n}) {\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <form onSubmit={handleSubmit} className='TodoForm'>\r\n                <div className=\"text\">\r\n                    {\r\n                        heading &&\r\n                        <h3>{heading}</h3>\r\n                    }\r\n                    <input\r\n                        type='text'\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                        placeholder='Задача'\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"remind\">\r\n                    <Bell />\r\n                    <p>Напомнить!</p>\r\n                    <input className=\"check\" type=\"checkbox\" />\r\n                </div>\r\n                <div className=\"pick-day\">\r\n                    <div className=\"title\">\r\n                        <CalendarDay />\r\n                        <p>Выбрать день</p>\r\n                    </div>\r\n                    <DatePicker\r\n                        value={day}\r\n                        onChange={day => setDay(day)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-time\">\r\n                    <div className=\"title\">\r\n                        <Clock />\r\n                        <p>Выбрать время</p>\r\n                    </div>\r\n                    <TimePicker\r\n                        value={time}\r\n                        onChange={time => setTime(time)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"pick-day\">\r\n\r\n                    <div className=\"title\">\r\n                        <CalendarDay />\r\n                        <p>Определить срок выполнения</p>\r\n                    </div>\r\n                    <DatePicker\r\n                        value={day1}\r\n                        onChange={day1 => setDay1(day1)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-time\">\r\n                    <div className=\"title\">\r\n                        <Clock />\r\n                        <p>Выбрать время</p>\r\n                    </div>\r\n                    <TimePicker\r\n                        value={time1}\r\n                        onChange={time1 => setTime1(time1)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-priority\">\r\n                    <div className=\"title\">\r\n                        <CardList />\r\n                        <p>Выбрать приоритет</p>\r\n                    </div>\r\n                    <div className=\"prioritys\">\r\n                        <div className={`priority ${priorityProject === 0 ? 'active' : ''}`} onClick={() => { setPriorityProject(0) }}>\r\n                            Низкий\r\n                    </div>\r\n                        <div className={`priority ${priorityProject === 1 ? 'active' : ''}`} onClick={() => { setPriorityProject(1) }}>\r\n                            Средний\r\n                    </div>\r\n                        <div className={`priority ${priorityProject === 2 ? 'active' : ''}`} onClick={() => { setPriorityProject(2) }}>\r\n                            Высокий\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"pick-project\">\r\n                    <div className=\"title\">\r\n                        <Palette />\r\n                        <p>Выбрать предмет</p>\r\n                    </div>\r\n                    <div className=\"projects\">\r\n                        {\r\n                            projects.length > 0 ?\r\n                                projects.map(project =>\r\n                                    <div className={`project ${todoProject === project.name ? \"active\" : \"\"} `}\r\n                                        key={project.id}\r\n                                        onClick={() => setTodoProject(project.name)}\r\n                                    >\r\n                                        {project.name}\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                <div style={{ color: 'red' }}>\r\n                                    Пожалуйста добавьте учебные предметы\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    showButtons &&\r\n                    <div>\r\n                        <div className=\"cancel\" onClick={() => setShowModal(false)}>\r\n                            <X size='40' />\r\n                        </div>\r\n                        <div className=\"confirm\">\r\n                            <button>Добавить задачу</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </form>\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default TodoForm","import React, { useContext, useEffect, useState } from 'react';\r\n\r\n\r\n\r\n\r\nimport Modal from \"./Modal\"\r\nimport TodoForm from './TodoForm';\r\nimport { TodoContext } from '../context/index'\r\nimport { calendarItems } from '../constans';\r\nimport firebase from \"../firebase\"\r\nimport moment from 'moment';\r\nimport randomColor from 'randomcolor';\r\n\r\n\r\nfunction AddNewTodo() {\r\n\r\n\r\n  const { projects, selectedProject } = useContext(TodoContext)\r\n\r\n\r\n  const [todoProject, setTodoProject] = useState(selectedProject)\r\n  const [priorityProject,setPriorityProject] = useState(1)\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState(new Date())\r\n  const [time, setTime] = useState(new Date())\r\n  const [day1, setDay1] = useState(new Date())\r\n  const [time1, setTime1] = useState(new Date())\r\n\r\n  function handleSubmit(e) {\r\n\r\n    if (text && !calendarItems.includes(todoProject)) {\r\n      firebase\r\n        .firestore()\r\n        .collection('todos')\r\n        .add(\r\n\r\n          {\r\n            text: text,\r\n            date: moment(day).format(\"MM/DD/YYYY\"),\r\n            date1: moment(day1).format(\"DD/MM/YYYY\"),\r\n            day: moment(day).format(\"d\"),\r\n            time: moment(time).format(\"hh:mm A\"),\r\n            day1: moment(day1).format(\"d\"),\r\n            time1: moment(time1).format(\"hh:mm A\"),\r\n            priority: priorityProject,\r\n            checked: false,\r\n            color: randomColor(),\r\n            projectName: todoProject\r\n          }\r\n        )\r\n        \r\n        setShowModal(false)\r\n        setText(\"\")\r\n        setDay(new Date())\r\n        setTime(new Date())\r\n        setDay1(new Date())\r\n        setTime1(new Date())\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTodoProject(selectedProject)\r\n  }, [selectedProject]\r\n  )\r\n\r\n\r\n  return (\r\n    <div className='AddNewTodo'>\r\n      <div className=\"btn\">\r\n        <button onClick={() => setShowModal(true)}>\r\n          Новая задача\r\n              </button>\r\n      </div>\r\n      <Modal showModal={showModal} setShowModal={setShowModal}>\r\n        <TodoForm\r\n          handleSubmit={handleSubmit}\r\n          heading='Добавить новую задачу'\r\n          text={text}\r\n          setText={setText}\r\n          day={day}\r\n          setDay={setDay}\r\n          time={time}\r\n          setTime={setTime}\r\n          day1={day1}\r\n          setDay1={setDay1}\r\n          time1={time1}\r\n          setTime1={setTime1}\r\n          todoProject={todoProject}\r\n          setTodoProject={setTodoProject}\r\n          priorityProject={priorityProject}\r\n          setPriorityProject={setPriorityProject}\r\n          projects={projects}\r\n          showButtons={true}\r\n          setShowModal={setShowModal}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddNewTodo","import React, {useContext, useEffect, useState} from 'react'\r\n\r\nimport TodoForm from \"./TodoForm\"\r\nimport { TodoContext } from '../context/index'\r\nimport moment from 'moment'\r\nimport firebase from '../firebase'\r\nimport { XCircle } from 'react-bootstrap-icons';\r\n\r\nfunction EditTodo() {\r\n\r\n\r\n  const [todoProject, setTodoProject] = useState(\"\")\r\n  const [priorityProject, setPriorityProject] = useState(0)\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState(new Date())\r\n  const [time, setTime] = useState(new Date())\r\n  const [day1, setDay1] = useState(new Date())\r\n  const [time1, setTime1] = useState(new Date())\r\n\r\n\r\n  // CONTEXT\r\n  const { selectedTodo, projects,     setSelectedTodo } = useContext(TodoContext)\r\n\r\n  useEffect(() => {\r\n      if(selectedTodo){\r\n          setText(selectedTodo.text)\r\n          setDay(moment(selectedTodo.date, 'MM/DD/YYYY'))\r\n          setTime(moment(selectedTodo.time, 'hh:mm A'))\r\n          setDay1(moment(selectedTodo.date1, 'DD/MM/YYYY'))\r\n          setTime1(moment(selectedTodo.time1, 'hh:mm A'))\r\n          setTodoProject(selectedTodo.projectName)\r\n          setPriorityProject(selectedTodo.priority)\r\n      }\r\n  }, [selectedTodo])\r\n\r\n  useEffect(() => {\r\n    console.log('test')\r\n      if(selectedTodo){\r\n          firebase\r\n              .firestore()\r\n              .collection('todos')\r\n              .doc(selectedTodo.id)\r\n              .update({\r\n                  text,\r\n                  date : moment(day).format('MM/DD/YYYY'),\r\n                  date1 : moment(day1).format('DD/MM/YYYY'),\r\n                  day : moment(day).format('d'),\r\n                  time : moment(time).format('hh:mm A'),\r\n                  day1 : moment(day1).format('d'),\r\n                  time1 : moment(time1).format('hh:mm A'),\r\n                  projectName : todoProject,\r\n                  priority : priorityProject\r\n              })\r\n      }\r\n\r\n  }, [text, day, time, day1, time1, todoProject,priorityProject])\r\n\r\n\r\n  function handleSubmit(e) {\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {   selectedTodo &&\r\n        <div className=\"EditTodo\">\r\n          <div className=\"container\">\r\n          <div className=\"header\">\r\n            Редактировать задачу\r\n            <span className=\"delete\" onClick={()=>     setSelectedTodo(undefined)} >\r\n                                <XCircle size=\"13\" />\r\n                            </span>\r\n          </div>\r\n         \r\n            <TodoForm\r\n              handleSubmit={handleSubmit}\r\n              text={text}\r\n              setText={setText}\r\n              day={day}\r\n              setDay={setDay}\r\n              time={time}\r\n              setTime={setTime}\r\n              day1={day1}\r\n              setDay1={setDay1}\r\n              time1={time1}\r\n              setTime1={setTime1}\r\n              todoProject={todoProject}\r\n              setTodoProject={setTodoProject}\r\n              priorityProject={priorityProject}\r\n              setPriorityProject={setPriorityProject}\r\n              projects={projects}\r\n              showButtons={false}\r\n\r\n            />\r\n          </div>\r\n        </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTodo;\r\n","import React, { useContext, useState } from 'react';\r\nimport { CheckCircleFill, Circle, ArrowClockwise, Trash } from 'react-bootstrap-icons';\r\nimport firebase from \"../firebase/index\"\r\nimport moment from 'moment'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Todo({ todo }) {\r\n  const [hover, setHover] = useState(false)\r\n  \r\n  const { selectedTodo, setSelectedTodo} = useContext(TodoContext)\r\n  \r\n  const handleDelete = todo => {\r\n    deleteTodo(todo)\r\n\r\n    if(selectedTodo === todo){\r\n        setSelectedTodo(undefined)\r\n    }\r\n}\r\n\r\n   const deleteTodo= (todo)=> {\r\n    firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .delete()\r\n  }\r\n\r\n  const checkTodo = todo => {\r\n    firebase\r\n        .firestore()\r\n        .collection('todos')\r\n        .doc(todo.id)\r\n        .update({\r\n            checked : !todo.checked\r\n        })\r\n}\r\n\r\nconst repeatNextDay = todo => {\r\n  const nextDayDate = moment(todo.date, 'MM/DD/YYYY').add(1, 'days')\r\n\r\n  const repeatedTodo = {\r\n      ...todo,\r\n      checked : false,\r\n      date : nextDayDate.format('MM/DD/YYYY'),\r\n      day : nextDayDate.format('d')\r\n  }\r\n\r\n  delete repeatedTodo.id\r\n\r\n  firebase\r\n      .firestore()\r\n      .collection('todos')\r\n      .add(repeatedTodo)\r\n}\r\n\r\nconst priorityName = (priority) => {\r\n  switch(priority){\r\n    case 0: return 'Низкий'\r\n    case 1: return \"Средний\"\r\n    case 2: return \"Высокий\"\r\n  }\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"Todo\">\r\n      <div className=\"todo-container\"\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n      >\r\n        <div className=\"check-todo\"\r\n              onClick={()=>checkTodo(todo)}\r\n        >\r\n          {\r\n            todo.checked ?\r\n              <span className=\"checked\">\r\n                <CheckCircleFill color=\"bebebe\" />\r\n              </span>\r\n              :\r\n              <span className=\"unchecked\">\r\n                <Circle color={todo.color} />\r\n              </span>\r\n          }\r\n        </div>\r\n\r\n        <div className=\"text\"\r\n         onClick={()=>setSelectedTodo(todo)}\r\n        >\r\n          <p style={{ color: todo.checked ? \"#bebebe\" : \"#000000\", fontWeight: 'bold' }}   >{todo.text} </p>\r\n          <span>{todo.time}-{todo.projectName}- <p className=\"timeTitle\">Сделать До: {todo.date1}</p> Приоритет: <span className=\"itemTitle\" data-priority={todo.priority}>{priorityName(todo.priority)}</span>  </span>\r\n          <div className={`line ${todo.checked ? 'line-through' : ''}`}></div>\r\n        </div>\r\n        <div className=\"add-to-next-day\"\r\n              onClick={()=>repeatNextDay(todo)}\r\n        \r\n        >\r\n          {\r\n            todo.checked &&\r\n            <span>\r\n              <ArrowClockwise />\r\n            </span>\r\n          }\r\n        </div>\r\n\r\n        <div className=\"delete-todo\" onClick={() => handleDelete(todo)} >\r\n          {\r\n            (hover || todo.checked) &&\r\n            <span>\r\n              <Trash />\r\n            </span>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Todo from \"./Todo\"\r\n\r\nmoment.lang('ru')\r\n\r\nfunction Next7days({ todos }) {\r\n\r\n  const [weekTodos, setWeekTodos] = useState([])\r\n\r\n  useEffect(() => {\r\n    const days = ['0','1', '2', '3', '4', '5', '6']\r\n    const sortedTodosByDay = days.map(day => {\r\n      return {\r\n        todos: todos.filter(todo => todo.day === day),\r\n        number: day\r\n      }\r\n\r\n    })\r\n    const today = parseInt(moment().format('d'))\r\n    const arrangeDays = sortedTodosByDay.slice(today).concat(sortedTodosByDay.slice(0, today))\r\n    setWeekTodos(arrangeDays)\r\n  }, [todos])\r\n  \r\n  const conditionDay =(day)=>{\r\n    switch(day){\r\n      case \"Monday\": return \"Понедельник\"\r\n      case \"Tuesday\": return \"Вторник\"\r\n      case \"Wednesday\": return \"Среда\"\r\n      case \"Thursday\": return \"Четверг\"\r\n      case \"Friday\": return \"Пятница\"\r\n      case \"Saturday\": return \"Суббота\"\r\n      case \"Sunday\": return \"Воскресенье\"\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"Next7Days\">\r\n      {\r\n        weekTodos.map(day =>\r\n          <div key={day.number}>\r\n            <div className=\"day\">\r\n              <div className=\"name\">\r\n                {conditionDay( moment(day.number, 'd').format('dddd'))}\r\n                {day.number === moment().format('d') && '(Сегодня)'}\r\n              </div>\r\n              <div className=\"total-todos\">\r\n                ({day.todos.length})\r\n \r\n              </div>\r\n            </div>\r\n            <div className=\"todos\">\r\n\r\n              {day.todos.map(todo =>\r\n\r\n                <Todo key={todo.id} todo={todo} />\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n        )\r\n\r\n\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Next7days;\r\n","import React, { useContext, useState } from 'react'\r\nimport Todo from './Todo'\r\nimport Next7Days from './Next7days'\r\nimport { TodoContext } from '../context/index'\r\nimport { XCircle,QuestionCircle } from 'react-bootstrap-icons';\r\n\r\nfunction Todos({dopinfo,setDopInfo,...props}) {\r\n    const { todos, selectedProject } = useContext(TodoContext)    \r\n\r\n    return (\r\n        <div>\r\n            <div className='Todos'>\r\n                <div className='selected-project'>\r\n                    {selectedProject}\r\n                    {selectedProject!==\"Сегодня\"&& selectedProject!==\"Неделя\"&& selectedProject!==\"Все задачи\" &&\r\n                    <QuestionCircle size=\"20\"\r\n                        onClick={() => setDopInfo(true)}\r\n                     />\r\n                    }\r\n                </div>\r\n                <div className=\"todos\">\r\n                    {\r\n                        selectedProject === \"Неделя\" ?\r\n                            <Next7Days todos={todos} />\r\n                            :\r\n                            todos.map(todo =>\r\n                                <Todo todo={todo} key={todo.id} />\r\n                            )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            { dopinfo && selectedProject!==\"Сегодня\"&& selectedProject!==\"Неделя\"&& selectedProject!==\"Все задачи\" &&\r\n\r\n                <div className=\"dopInfoLesson\">   \r\n                    <div className=\"dop-selected-project\">\r\n                        Информация об учебном предмете \r\n            \r\n                        <span className=\"delete\"  onClick={() => setDopInfo(false)}>\r\n                                <XCircle size=\"13\" />\r\n                            </span>\r\n                    </div>\r\n                    <div className=\"body-info\">\r\n                        <div className=\"body-info-block\">\r\n                            <div>Предмет </div>\r\n                            <b>{selectedProject}</b>\r\n                        </div>\r\n                        <div className=\"LessonInfo\">\r\n                            <div className=\"body-info-block\">\r\n                                 <div>Преподаватель</div>\r\n                                 <b>Иванов Иван Иванович</b>\r\n                            </div>\r\n                            <div className=\"body-info-block\">\r\n                                <div>Почта:</div>\r\n                                <b>ivanov@mail.com</b>\r\n                            </div>\r\n                            <div className=\"body-info-block\">\r\n                                <div>Аудитория:</div>\r\n                                <b>134</b>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"body-info-block\">\r\n                            <div>Заметки:</div>\r\n                            <div><textarea className=\"dopInfoInput\" placeholder=\"Введите текст заметки\"/></div>\r\n                        </div>\r\n                        <button className=\"dopInfoBtn btn button\">Изменить</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos","import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\n    const [rating, setRating] = useState(45)\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"testInfo\">\r\n            <div className=\"userInfo\">\r\n                <label>Пользователь: <b>Поздеев Виктор Александрович</b></label>\r\n                <label>Статус: <b>Студент</b></label>\r\n                <label>Группа: <b>ИДБ-17-07</b></label><br />\r\n            </div>\r\n            <div className=\"rate\">\r\n                Средний рейтинг:\r\n            <label className=\"rateLine\">\r\n                    <div className=\"userRate\" style={{ width: 5 * rating + 'px' }}>\r\n                        {rating}\r\n                    </div>\r\n                </label>\r\n                {'  / 54'}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useContext, useState} from 'react';\nimport './App.css';\n\nimport Main from \"./componets/Main\"\nimport Sidebar from \"./componets/Sidebar\"\nimport User from \"./componets/User\"\nimport Projects from \"./componets/Projects\"\nimport Calendar from \"./componets/Calendar\"\nimport AddNewTodo from \"./componets/AddNewTodo\"\nimport EditTodo from \"./componets/EditTodo\"\nimport Todos from \"./componets/Todos\"\nimport { TodoContext } from './context/index'\nimport Header from './componets/Header';\n\nfunction App() {\n\n\n  const { selectedTodo, projects } = useContext(TodoContext) \n  const [dopinfo,setDopInfo] = useState(false)\n  return (\n    <div className=\"App\">\n      <Sidebar>\n\n        <User />\n        <AddNewTodo />\n        <Calendar />\n        <Projects />\n\n      </Sidebar>\n\n      <Main>\n      <Header/>\n        <Todos dopinfo={dopinfo} setDopInfo={setDopInfo}/>\n        <div className={`mainEditTodo ${dopinfo? 'right':'left'}`}>\n          <EditTodo />\n        </div>\n \n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport App from './App';\nimport {TodoContextProvider} from \"./context/index\"\n\n\n\nReactDOM.render(\n <TodoContextProvider>\n    <App />\n    </TodoContextProvider>\n,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}